import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'package:xml/xml.dart' as xml;
import 'package:cached_network_image/cached_network_image.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'RSS Feed Reader',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: RssFeedScreen(),
    );
  }
}

class RssFeedScreen extends StatefulWidget {
  @override
  _RssFeedScreenState createState() => _RssFeedScreenState();
}

class _RssFeedScreenState extends State<RssFeedScreen> {
  late List<Map<String, String>> _feedItems;

  @override
  void initState() {
    super.initState();
    fetchRssFeed();
  }

  Future<void> fetchRssFeed() async {
    final response = await http.get(Uri.parse('https://kilimonews.co.ke/agribusiness/feed/'));

    if (response.statusCode == 200) {
      final document = xml.XmlDocument.parse(response.body);
      final items = document.findAllElements('item');

      setState(() {
        _feedItems = items.map((node) {
          return {
            'title': node.findElements('title').first.text,
            'description': node.findElements('description').first.text,
            'image': node.findElements('enclosure').first.attributes
                .where((attribute) => attribute.name.local == 'url')
                .map((attribute) => attribute.value)
                .toString(),
          };
        }).toList();
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('RSS Feed'),
      ),
      body: _feedItems != null
          ? ListView.builder(
              itemCount: _feedItems.length,
              itemBuilder: (context, index) {
                return ListTile(
                  title: Text(_feedItems[index]['title'] ?? ''),
                  subtitle: Text(_feedItems[index]['description'] ?? ''),
                  leading: CachedNetworkImage(
                    imageUrl: _feedItems[index]['image'] ?? '',
                    placeholder: (context, url) => CircularProgressIndicator(color: AppColor.yellow),
                    errorWidget: (context, url, error) => Icon(Icons.error),
                  ),
                );
              },
            )
          : Center(
              child: CircularProgressIndicator(color: AppColor.yellow),
            ),
    );
  }
}
