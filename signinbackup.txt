// ignore_for_file: use_build_context_synchronously

import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:mavunohub/provider/auth_provider.dart';
import 'package:mavunohub/responsive/mobile_body.dart';
import 'package:mavunohub/responsive/responsive_layout.dart';
import 'package:mavunohub/screens/app_screens/log_in.dart';
import '../../components/custom_button.dart';
import '../../components/form_text.dart';
import '../../components/password.dart';
import 'package:provider/provider.dart';

import 'otp_screen.dart';

class SignIn extends StatefulWidget {
  const SignIn({Key? key}) : super(key: key);

  @override
  State<SignIn> createState() => _SignInState();
}

class _SignInState extends State<SignIn> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Theme.of(context).colorScheme.background,
      body: const ResponsiveLayout(
        desktopBody: DesktopSignIn(),
        mobileBody: MobileSignIn(),
        tabletBody: TabletSignIn(),
      ),
    );
  }
}

class TabletSignIn extends StatelessWidget {
  const TabletSignIn({
    super.key,
  });

  @override
  Widget build(BuildContext context) {
    return Stack(
      children: [
        Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            crossAxisAlignment: CrossAxisAlignment.center,
            children: [
              const Spacer(flex: 1),
              Image.asset('assets/mavunohub_logo.png', width: 250, height: 250),
              const FormText(
                title: 'Enter Username',
                text: 'Enter Username',
              ),
              const FormText(
                title: 'Enter PhoneNumber',
                text: 'Enter PhoneNumber',
              ),
              const PassWord(
                title: 'Create Password', // Updated the title to 'Password'
                text: 'Create Password',
              ),
              const PassWord(
                title: 'Confirm Password', // Updated the title to 'Password'
                text: 'Confirm Password',
              ),
              FormButton(
                  text: 'Create Account',
                  action: () {
                    // FirebaseAuth.instance.createUserWithEmailAndPassword(email: email, password: password)
                    Navigator.of(context).push(MaterialPageRoute(
                        builder: (context) => const SignIn()));
                  }),
              const Spacer(flex: 1),
            ],
          ),
        ),
      ],
    );
  }
}

class MobileSignIn extends StatefulWidget {
  const MobileSignIn({
    super.key,
  });

  @override
  State<MobileSignIn> createState() => _MobileSignInState();
}

class _MobileSignInState extends State<MobileSignIn> {
  final _phoneController = TextEditingController();
//
//
//
  final FirebaseAuth _auth = FirebaseAuth.instance;
  TextEditingController usernameController = TextEditingController();
  TextEditingController emailController = TextEditingController();
  TextEditingController passwordController = TextEditingController();

  //+25412345678
  void sendPhoneNumber() {
    final ap =
        Provider.of<AuthProvider>(context, listen: false);
    String phoneNumber = _phoneController.text.trim();
    ap.signInWithPhone(context, phoneNumber);
    // ap.signInWithPhone(context as BuildContext, "+${selectedCountry.phoneCode}");
  }
  
  
  
 void _logInWithEmailAndPassword() async {
    // Add your sign-in logic here using email and password
    String email = emailController.text;
    String password = passwordController.text;

    try {
      // Use Firebase Authentication or any other authentication method
      // to sign in the user with email and password
      // Example using Firebase:
      // await FirebaseAuth.instance.logInWithEmailAndPassword(email: email, password: password);

      // Navigate to the next screen after successful sign-in
      Navigator.of(context).pushReplacement(MaterialPageRoute(
        builder: (context) => const LogIn(),
      ));
    } catch (e) {
      // Handle sign-in failure, e.g., show an error message
      print('Sign-in error: $e');
    }
  }
  
  
  
  //
  final _formKey = GlobalKey<FormState>();
  String email = "", password = "", username = "", phone = "";
  final TextEditingController _emailController = TextEditingController();
  final TextEditingController _usernameController = TextEditingController();
  final TextEditingController _passwordController = TextEditingController();
  final TextEditingController _phonenumberController = TextEditingController();
  registration() async {
    try {
      UserCredential userCredential = await FirebaseAuth.instance
          .createUserWithEmailAndPassword(email: email, password: password);
      // ignore: use_build_context_synchronously
      ScaffoldMessenger.of(context).showSnackBar(SnackBar(
          backgroundColor: Theme.of(context).colorScheme.tertiary,
          content: const Text(
            "Registered Successfuly",
            style: TextStyle(fontSize: 20),
          )));
      Navigator.of(context).push(
          MaterialPageRoute(builder: (context) => const MobileScaffold()));
    } on FirebaseAuthException catch (e) {
      if (e.code == 'weak-password') {
        ScaffoldMessenger.of(context).showSnackBar(const SnackBar(
            backgroundColor: Colors.red,
            content: Text(
              "Password is too weak",
              style: TextStyle(fontSize: 20),
            )));
      } else if (e.code == "email-already-in-use") {
        ScaffoldMessenger.of(context).showSnackBar(const SnackBar(
            backgroundColor: Colors.red,
            content: Text(
              'Account Already Exists',
              style: TextStyle(fontSize: 20),
            )));
      }
    }
    }

  @override
  Widget build(BuildContext context) {
    // final FirebaseAuth _auth = FirebaseAuth.instance;
    // TextEditingController usernameController = TextEditingController();
    // TextEditingController emailController = TextEditingController();
    // TextEditingController passwordController = TextEditingController();

    // void _registerWithEmailAndPassword() async {
    //   try {
    //     UserCredential userCredential =
    //         await _auth.createUserWithEmailAndPassword(
    //       email: emailController.text,
    //       password: passwordController.text,
    //     );
    //     if (userCredential.user != null) {
    //       // Registration successful, navigate to OTP verification screen
    //       Navigator.push(
    //         context,
    //         MaterialPageRoute(builder: (context) => const OTP(verificationId: '')),
    //       );
    //     } else {
    //       // Handle registration failure
    //       // You can show an error message here.
    //     }
    //   } catch (e) {
    //     print(e.toString());
    //     // Handle registration failure
    //     // You can show an error message here.
    //   }
    // }
//
//
//
//
//
//
//

    //
    return Center(
      child: Form(
        key: _formKey,
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            const Spacer(flex: 1),
            Image.asset('assets/mavunohub_logo.png', width: 250, height: 200),
            FormText(
              title: 'Enter Username',
              text: 'Enter Username',
              validator: (value) {
                if (value == null) {
                  return 'Please Enter Name';
                }
                return null;
              },
              controller: _usernameController,
            ),
            FormText(
              title: 'Enter Email',
              text: 'Enter Email',
              validator: (value) {
                if (value == null) {
                  return 'Please Enter Name';
                }
                return null;
              },
              controller: _emailController,
            ),
            FormText(
              title: 'Enter PhoneNumber',
              text: 'Enter PhoneNumber',
              validator: (value) {
                if (value == null) {
                  return 'Please Enter Name';
                }
                return null;
              },
              controller: _phonenumberController,
            ),
            PassWord(
              title: 'Create Password', // Updated the title to 'Password'
              text: 'Create Password',
              controller: _passwordController,
            ),
            PassWord(
              title: 'Confirm Password', // Updated the title to 'Password'
              text: 'Confirm Password',
              controller: _passwordController,
            ),
            FormButton(
              text: 'Create Account',
              action: () async {
                if (_formKey.currentState!.validate()) {
                  setState(() {
                    username:
                  _usernameController.text;
                  email:
                  _emailController.text;
                  phone:
                  _phonenumberController.text;
                  password:
                  _passwordController.text; 
                  });
                  
                }
                registration();
              },
              //  {
              //   Navigator.of(context).push(
              //       MaterialPageRoute(builder: (context) => const LogIn()));
              // }
              //
              //
              //
              //
              //  final authProvider = Provider.of<AuthProvider>(context, listen: false);
              // final phoneNumber = phoneController.text.trim();
              // authProvider.signInWithPhone(context, phoneNumber);
            ),
            const Spacer(flex: 1),
          ],
        ),
      ),
    );
  }
}

class DesktopSignIn extends StatelessWidget {
  const DesktopSignIn({
    super.key,
  });

  @override
  Widget build(BuildContext context) {
    return Stack(
      children: [
        Center(
          child: SizedBox(
            width: 400,
            child: Align(
              alignment: Alignment.center,
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                crossAxisAlignment: CrossAxisAlignment.center,
                children: [
                  const Spacer(flex: 1),
                  Image.asset('assets/mavunohub_logo.png',
                      width: 250, height: 250),
                  const FormText(
                    title: 'Enter Username',
                    text: 'Enter Username',
                  ),
                  const FormText(
                    title: 'Enter PhoneNumber',
                    text: 'Enter PhoneNumber',
                  ),
                  const PassWord(
                    title: 'Create Password', // Updated the title to 'Password'
                    text: 'Create Password',
                  ),
                  const PassWord(
                    title:
                        'Confirm Password', // Updated the title to 'Password'
                    text: 'Confirm Password',
                  ),
                  FormButton(
                      text: 'Create Account',
                      action: () {
                        Navigator.of(context).push(MaterialPageRoute(
                            builder: (context) => const SignIn()));
                      }),
                ],
              ),
            ),
          ),
        ),
      ],
    );
  }
}
